// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    firstName   String      @db.VarChar(200)
    lastName    String      @db.VarChar(200)
    email       String      @unique(map: "users_email_unique") @db.VarChar(150)
    mobile      String      @db.VarChar(200)
    password    String      @db.VarChar(200)
    otp         String      @db.VarChar(10)
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    products    products[]
    invoice_products invoice_products[]
    customers   customers[]
    invoices    invoices[]
    categories  categories[]
}

model categories {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    name        String      @db.VarChar(200)
    user_id     BigInt      @db.UnsignedBigInt
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    products    products[]
}

model products {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    user_id     BigInt      @db.UnsignedBigInt
    category_id BigInt      @db.UnsignedBigInt
    name        String      @db.VarChar(200)
    price       String      @db.VarChar(200)
    unit        String      @db.VarChar(200)
    img_url     String      @db.VarChar(200)     
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    categorys   categories  @relation(fields: [category_id], references: [id], onDelete: Cascade)
    invoice_products invoice_products[]
}

model invoices {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    total       String      @db.VarChar(200)
    discount    String      @db.VarChar(200)
    vat         String      @db.VarChar(200)
    payable     String      @db.VarChar(200)
    user_id     BigInt      @db.UnsignedBigInt
    customer_id BigInt      @db.UnsignedBigInt
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    customers   customers   @relation(fields: [customer_id], references: [id], onDelete: Cascade)
    invoice_products invoice_products[]
}

model invoice_products {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    invoice_id  BigInt      @db.UnsignedBigInt
    product_id  BigInt      @db.UnsignedBigInt
    user_id     BigInt      @db.UnsignedBigInt
    qty         String      @db.VarChar(200)
    sale_price  String      @db.VarChar(200)   
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    products    products    @relation(fields: [product_id], references: [id], onDelete: Cascade)
    invoices    invoices    @relation(fields: [invoice_id], references: [id], onDelete: Cascade)
}

model customers {
    id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
    name        String      @db.VarChar(200)
    email       String      @db.VarChar(200)
    mobile      String      @db.VarChar(200)    
    user_id     BigInt      @db.UnsignedBigInt
    created_at  DateTime    @default(now()) @db.Timestamp(0)
    updated_at  DateTime    @default(now()) @db.Timestamp(0)
    users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
    invoices    invoices[]
}
